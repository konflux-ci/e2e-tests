---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: konflux-e2e-tests
spec:
  description: |-
    This pipeline automates the process of running end-to-end tests for Konflux
    using a Kind cluster running on AWS cluster. The pipeline provisions
    the Kind cluster, installs Konflux using the konflux-ci repository scripts, runs the tests, collects artifacts,
    and finally deprovisions the Kind cluster.
  params:
    - name: SNAPSHOT
      description: 'The JSON string representing the snapshot of the application under test.'
      default: '{"components": [{"name":"test-app", "containerImage": "quay.io/example/repo:latest"}]}'
      type: string
    - name: test-name
      description: 'The name of the test corresponding to a defined Konflux integration test.'
      default: ''
    - name: ocp-version
      description: 'The OpenShift version to use for the ephemeral cluster deployment.'
      type: string
    - name: test-event-type
      description: 'Indicates if the test is triggered by a Pull Request or Push event.'
      default: 'none'
    - name: konflux-test-infra-secret
      description: The name of secret where testing infrastructures credentials are stored.
      type: string
    - name: replicas
      description: 'The number of replicas for the cluster nodes.'
      type: string
    - name: machine-type
      description: 'The type of machine to use for the cluster nodes.'
      type: string
    - name: oci-container-repo
      default: 'quay.io/konflux-test-storage/konflux-team/e2e-tests'
      description: The OCI container used to store all test artifacts.
    - name: component-image
      default: 'none'
      description: 'Container image built from any konflux git repo.'
    - name: container-image
      default: 'quay.io/redhat-user-workloads/konflux-qe-team-tenant/konflux-e2e/konflux-e2e-tests:latest'
      description: 'Konflux e2e tests container. Contain the ginkgo binary to run the e2e tests in any Konflux component.'
  tasks:
    - name: test-metadata
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/konflux-ci/tekton-integration-catalog.git
          - name: revision
            value: main
          - name: pathInRepo
            value: common/tasks/test-metadata/0.1/test-metadata.yaml
      params:
        - name: SNAPSHOT
          value: $(params.SNAPSHOT)
        - name: test-name
          value: $(context.pipelineRun.name)
    - name: provision-kind-cluster
      when:
        - input: "$(tasks.test-metadata.results.test-event-type)"
          operator: in
          values: ["pull_request"]
      runAfter:
        - test-metadata
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/psturc/tekton-integration-catalog.git
          - name: revision
            value: bump-mapt-version-v0.9.7
          - name: pathInRepo
            value: tasks/mapt-oci/kind-aws-spot/provision/0.2/kind-aws-provision.yaml
      params:
        - name: secret-aws-credentials
          value: mapt-kind-secret
        - name: cluster-access-secret-name
          value: kfg-$(context.pipelineRun.name)
        - name: id
          value: $(context.pipelineRun.name)
        - name: tags
          value: env=konflux,user=e2e-tests
        - name: debug
          value: 'false'
        - name: ownerKind
          value: PipelineRun
        - name: ownerName
          value: $(context.pipelineRun.name)
        - name: ownerUid
          value: $(context.pipelineRun.uid)
        - name: oci-ref
          value: $(params.oci-container-repo):$(context.pipelineRun.name)
        - name: credentials-secret-name
          value: $(params.konflux-test-infra-secret)
        - name: extra-port-mappings
          value: >-
            '[{\"containerPort\":30012,\"hostPort\":8180,\"protocol\":\"TCP\"}]'
        - name: cpus
          value: 64
        - name: memory
          value: 128
        - name: spot
          value: 'false'
    - name: deploy-konflux
      runAfter:
        - provision-kind-cluster
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/konflux-ci/tekton-integration-catalog
          - name: revision
            value: main
          - name: pathInRepo
            value: tasks/konflux-ci/deploy/0.3/deploy-konflux-ci.yaml
      params:
        - name: cluster-access-secret
          value: kfg-$(context.pipelineRun.name)
        - name: component-name
          value: e2e-tests
        - name: oci-ref
          value: $(params.oci-container-repo):$(context.pipelineRun.name)
        - name: oci-credentials
          value: "$(params.konflux-test-infra-secret)"
        - name: build-credentials
          value: "konflux-e2e-secrets"
    - name: konflux-e2e-tests
      timeout: 3h
      when:
        - input: "$(tasks.test-metadata.results.test-event-type)"
          operator: in
          values: ["pull_request"]
      runAfter:
        - deploy-konflux
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/psturc/e2e-tests.git
          - name: revision
            value: KFLUXDP-316
          - name: pathInRepo
            value: integration-tests/tasks/konflux-e2e-tests/0.2/konflux-e2e-tests.yaml
      params:
        - name: test-name
          value: "$(context.pipelineRun.name)"
        - name: git-repo
          value: "$(tasks.test-metadata.results.git-repo)"
        - name: git-url
          value: "$(tasks.test-metadata.results.git-url)"
        - name: git-revision
          value: "$(tasks.test-metadata.results.git-revision)"
        - name: oras-container
          value: "$(params.oci-container-repo):$(context.pipelineRun.name)"
        - name: job-spec
          value: "$(tasks.test-metadata.results.job-spec)"
        - name: component-image
          value: "$(tasks.test-metadata.results.container-image)"
        - name: container-image
          value: "$(tasks.test-metadata.results.container-image)"
        - name: cluster-access-secret-name
          value: kfg-$(context.pipelineRun.name)
        - name: test-environment
          value: "upstream"
        - name: e2e-timeout
          value: "150m"
  finally:
    - name: store-pipeline-status
      when:
        - input: "$(tasks.test-metadata.results.test-event-type)"
          operator: in
          values: ["pull_request"]
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/konflux-ci/tekton-integration-catalog.git
          - name: revision
            value: main
          - name: pathInRepo
            value: tasks/store-pipeline-status/0.1/store-pipeline-status.yaml
      params:
        - name: oci-ref
          value: "$(params.oci-container-repo):$(context.pipelineRun.name)"
        - name: credentials-secret-name
          value: "$(params.konflux-test-infra-secret)"
        - name: pipelinerun-name
          value: $(context.pipelineRun.name)
        - name: pipeline-aggregate-status
          value: $(tasks.status)
    - name: deprovision-kind-cluster
      when:
        - input: "$(tasks.test-metadata.results.test-event-type)"
          operator: in
          values: ["pull_request"]
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/konflux-ci/tekton-integration-catalog.git
          - name: revision
            value: main
          - name: pathInRepo
            value: tasks/mapt-oci/kind-aws-spot/deprovision/0.1/kind-aws-deprovision.yaml
      params:
        - name: secret-aws-credentials
          value: mapt-kind-secret
        - name: id
          value: $(context.pipelineRun.name)
        - name: cluster-access-secret
          value: kfg-$(context.pipelineRun.name)
        - name: oci-container
          value: $(params.oci-container-repo):$(context.pipelineRun.name)
        - name: oci-credentials
          value: konflux-test-infra
    - name: pull-request-status-message
      when:
        - input: "$(tasks.test-metadata.results.test-event-type)"
          operator: in
          values: ["pull_request"]
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/konflux-ci/tekton-integration-catalog.git
          - name: revision
            value: main
          - name: pathInRepo
            value: common/tasks/pull-request-comment/0.1/pull-request-comment.yaml
      params:
        - name: test-name
          value: "$(context.pipelineRun.name)"
        - name: oci-container
          value: "$(params.oci-container-repo):$(context.pipelineRun.name)"
        - name: pipeline-aggregate-status
          value: "$(tasks.status)"
        - name: pull-request-author
          value: "$(tasks.test-metadata.results.pull-request-author)"
        - name: pull-request-number
          value: "$(tasks.test-metadata.results.pull-request-number)"
        - name: git-repo
          value: "$(tasks.test-metadata.results.git-repo)"
        - name: git-org
          value: "$(tasks.test-metadata.results.git-org)"
        - name: git-revision
          value: "$(tasks.test-metadata.results.git-revision)"
        - name: junit-report-name
          value: e2e-report.xml
        - name: e2e-log-name
          value: e2e-tests.log
        - name: cluster-provision-log-name
          value: kind-aws-provision.log
        - name: enable-test-results-analysis
          value: "true"
