# A github token used to create AppStudio applications in github.
# Required: yes
export GITHUB_TOKEN=''

# A quay token to push components images to quay.io.
# Note: The quay token must be your dockerconfigjson encoded in base64 format. It is generated when you run `docker login quay.io` (or `podman login quay.io`).
# Example: export QUAY_TOKEN=$(base64 < ~/.docker/config.json)
# Required: yes
export QUAY_TOKEN=''

# A quay organization where repositories for component images will be created.
# Required: yes
export DEFAULT_QUAY_ORG='redhat-appstudio-qe'

# A quay token of OAuth application for DEFAULT_QUAY_ORG with scopes -  Administer organizations, Administer repositories, Create repositories 
# Required: yes
export DEFAULT_QUAY_ORG_TOKEN=''

# GitHub organization where Red Hat AppStudio applications will be created and pushed.
# Note: It must be an organization (which can be created for free), and cannot be your regular GitHub account.
# Example: redhat-appstudio-qe
# Required: no (recommended)
export MY_GITHUB_ORG=''

# Quay organization/account where to push components containers.
# It is recommended to create your own account.
# Example: redhat-appstudio-qe
# Required: no (recommended)
export QUAY_E2E_ORGANIZATION=''

# Name of the namespace used for running build-templates E2E tests.
# Required: no
export E2E_APPLICATIONS_NAMESPACE=''

# The name of the private git repository used in HAS E2E tests.
# Your GITHUB_TOKEN should be able to read from it.
# Example: https://github.com/redhat-appstudio-qe/private-quarkus-devfile-sample
# Required: no
export PRIVATE_DEVFILE_SAMPLE=''

# A valid quay robot account username to make quay oauth.
# Required: no
export QUAY_OAUTH_USER=''

# A valid quay quay robot account token to make oauth against quay.io.
# Required: no
export QUAY_OAUTH_TOKEN=''

# A valid docker.io token to avoid pull limits.
# Format: username:access_token.
# Example: susdas:43228532-b374-11ec-989b-98fa9b70b97d
# Required: no
export DOCKER_IO_AUTH=''

# A specific github organization from where to download infra-deployments repository.
# Example: redhat-appstudio
# Required: no
export INFRA_DEPLOYMENTS_ORG=''

# A valid infra-deployments branch.
# Example: main
# Required: no
export INFRA_DEPLOYMENTS_BRANCH=''

# Run only test suites with the given Giknkgo label.
# Required: no
export E2E_TEST_SUITE_LABEL=''

# Level of verbosity for klog.
# Required: no
export KLOG_VERBOSITY='1'

# Expiration for tags created by pull-request pipelineruns.
# Format: digits + h (hours), d (days) or w (weeks)
# Example: 5d
# Required: no
export IMAGE_TAG_EXPIRATION='6h'

# A github appid used to set up Pac integerating with Github App
# Note: how to get Github App ID https://docs.github.com/en/apps/creating-github-apps/authenticating-with-a-github-app/authenticating-as-a-github-app-installation#using-octokitjs-to-authenticate-with-an-installation-id
# Required: only for running tests that are using PaC (see README.md for more details)
export E2E_PAC_GITHUB_APP_ID=''

# A github private key in base64 format used to set up Pac integerating with Github App
# Note: How to get private key https://docs.github.com/en/apps/creating-github-apps/authenticating-with-a-github-app/managing-private-keys-for-github-apps
# Required: only for running tests that are using PaC (see README.md for more details)
export E2E_PAC_GITHUB_APP_PRIVATE_KEY=''